version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.1.0
  aws-cli: circleci/aws-cli@2.0.0
jobs:
  test:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
        environment:
          RAILS_ENV: test
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
      - image: circleci/mysql:8.0.16
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
    working_directory: ~/terraform_and_rails/rails_hello
    steps:
      - checkout:
          path: ~/terraform_and_rails
      - restore_cache:
          keys:
            - rails-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-bundle-v2-
      - run:
          name: bundle install
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: rails-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - rails-yarn-{{ checksum "yarn.lock" }}
            - rails-yarn-
      - run:
          name: yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: rails-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m
      - run: mv ./config/database.yml.ci ./config/database.yml
      - run:
          name: db create
          command: bundle exec rake db:create

  build-and-push:
    docker:
      - image: circleci/python
    working_directory: ~/terraform_and_rails/rails_hello
    steps:
      - checkout:
          path: ~/terraform_and_rails
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - restore_cache:
          keys:
            - rails-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-bundle-v2-
      - run:
          name: bundle install
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: rails-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Login ECR
          command: aws ecr get-login-password | docker login --username AWS --password-stdin https://${AWS_ECR_ACCOUNT_URL}
      - run:
          name: assets precompile
          command: bundle exec rails assets:precompile
      - run:
          name: Build Docker image
          command: docker build -t ${AWS_ECR_ACCOUNT_URL}/${AWS_RESOURCE_RAILS}:latest containers/app/Dockerfile .
      - run:
          name: Push Image
          command: docker push ${AWS_ECR_ACCOUNT_URL}/${AWS_RESOURCE_RAILS}:latest
workflows:
  version: 2.1
  test:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
      - aws-ecs/deploy-service-update:
          requires:
            - test
            - build-and-push
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: ACCESS_KEY_ID
          aws-secret-access-key: SECRET_ACCESS_KEY
          family: 'rails_hello'
          cluster-name: 'rails-hello'
          service-name: 'rails_hello-service'
          container-image-name-updates: 'container=rails,tag=latest'
